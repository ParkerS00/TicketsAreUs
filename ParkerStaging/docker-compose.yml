version: '3.1'
name: ticketsareus

services:
  db:
    container_name: database
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
    volumes:
      - ../Dump/20240215.09.46.07.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - databaseTunnel
      - otel

  blazorapp:
    container_name: parker-blazorapp
    depends_on:
      - db
    build: ..
    ports:
      - 4560:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - pec_tickets=user id= postgres; password=postgres; server=db; database= postgres; port= 5432
    networks:
      - databaseTunnel
      - otel
    healthcheck:
      test: wget --tries=1 http://localhost:8080/health || exit 1
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 1s
    restart: unless-stopped

  blackbox:
    image: prom/blackbox-exporter:v0.23.0
    container_name: parker-blackbox
    restart: unless-stopped
    ports:
      - 9460:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./blackbox/blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      otel:


  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: parker-prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - 9459:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    depends_on:
      - blackbox
    networks:
      otel:


  grafana:
    image: grafana/grafana:9.4.7
    container_name: parker-grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    user: root
    ports:
      - 3000:3000
    depends_on:
      - prometheus
      # - tempo
      - loki
    networks:
      otel:


  otel-collector:
    container_name: parker-otel
    hostname: otel
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel/otel.yml:/etc/otel-collector-config.yaml
    restart: unless-stopped
    ports:
      - 5436:8888
      - 5433:8889
      - 5434:4317
      - 5435:55679
      - 54321:13133
    networks:
      otel:


  loki:
    image: grafana/loki:2.8.0
    container_name: parker-loki
    command: -config.file=/etc/loki/local-config.yml
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./loki/loki.yml:/etc/loki/local-config.yml
      - loki:/data/loki
    restart: unless-stopped
    ports:
      - 3121:3100
    networks:
      otel:


  # tempo:
  #   image: grafana/tempo:2.0.1
  #   container_name: tempo
  #   command: [ "-config.file=/etc/tempo.yaml" ]
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./tempo/tempo.yml:/etc/tempo.yaml
  #     - tempo:/tmp/tempo
  #   restart: unless-stopped
  #   ports:
  #     - 3200:3200  
  #     - 4007:4317  
  #   depends_on:
  #     - otel-collector
  #   networks:
  #     otel:

networks:
  otel:
  databaseTunnel:
    driver: bridge

volumes:
  loki:
  # tempo:
  prometheus:
  grafana-data:
