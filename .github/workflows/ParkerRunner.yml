name: ParkerRunner
on: [push]
    
jobs:
  Deploy:
    runs-on:
      - parkertwo

    steps:
      - name: "clean" 
        run: |  
          pwd
          docker compose down -v
          cd ../../
          pwd
          rm -rf ./TicketsAreUs
        working-directory: ./../../../TicketsAreUs/ParkerStaging
        

      - name: "clone"
        run: |
          pwd
          git clone https://${{secrets.PARKER_GITHUB_KEY}}@github.com/ParkerS00/TicketsAreUs.git
        working-directory: ./../../../

      - name: "build"
        run: |
          docker compose up --build -d
        working-directory: ./../../../TicketsAreUs/ParkerStaging

      - name: "lint"
        run: |
          dotnet format --verify-no-changes
        working-directory: ./../../../TicketsAreUs/WebApp

      - name: "integration test"
        run: |
          dotnet test
        working-directory: ./../../../TicketsAreUs/Test  

      - name: "unit test"
        run: |
          pwd
          dotnet test 
        working-directory: ./../../../TicketsAreUs/UnitTest 

      - name: "build warning"
        run: |
          dotnet build --warnaserror
        working-directory: ./../../../TicketsAreUs

      - name: "kubernetes"
        run: |
          docker build -t 144.17.92.12:5000/parker/blazor-web:1 .
          docker push 144.17.92.12:5000/parker/blazor-web:1

          # kubectl -n parker-blazor create configmap blazor-web-postgres-init --from-file=Dump/20240215.09.46.07.sql

          cd ParkerStaging/KubeConfigs
            kubectl -n parker-blazor delete configmap otel-config || true
            kubectl -n parker-blazor create configmap otel-config --from-file=/otel-collector-config.yml
          cd ../../
          
          kubectl apply -f ParkerStaging/Kube/

        working-directory: ./../../../TicketsAreUs

      - name: Teams notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.PARKER_TEAMS_HOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          overwrite: "{title: `I am sad ${workflow_link}`}"

