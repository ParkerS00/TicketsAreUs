name: PullRequest
on: 
    pull_request: 
      types: [opened, reopened]
jobs:
    deploy-to-kubernetes:
      runs-on: parkertwo
      steps:
        - name: check out code
          uses: actions/checkout@v4
        - name: deploy kubernetes environment
          run: |
            export PULL_REQUEST_ID=${{github.event.pull_request.number}}
            export RUN_SALT="pr-${PULL_REQUEST_ID}-${GITHUB_RUN_ID}"
            export NAMESPACE=parker-pr-$PULL_REQUEST_ID

            kubectl create namespace $NAMESPACE || true

            pwd

            kubectl -n $NAMESPACE delete configmap blazor-web-postgres-init || true
            kubectl -n $NAMESPACE create configmap blazor-web-postgres-init --from-file=Dump/20240215.09.46.07.sql

            docker build -t 144.17.92.12:5000/parker/blazor-web:$RUN_SALT .
            docker push 144.17.92.12:5000/parker/blazor-web:$RUN_SALT

            for file in ./ParkerStaging/KubePR/*; do
              echo "Applying $file"
              cat "$file" | envsubst | kubectl apply -f -
            done
        - name: Create Comment
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.PARKER_GITHUB_KEY }}
            script: |
              const issueNumber = context.issue.number;
              const owner = context.repo.owner;
              const repo = context.repo.repo;
              const prNumber = context.payload.pull_request.number;
              const url = `http://${prNumber}.parker-tickets-kube.duckdns.org`;
  
              console.log('Issue Number:', issueNumber);
              console.log('Owner:', owner);
              console.log('Repo:', repo);
              console.log('PR Number:', prNumber);
              console.log('Generated URL:', url);
  
              github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: owner,
                repo: repo,
                body: `Check out the pull request at ${url}`
              });